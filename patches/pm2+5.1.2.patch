diff --git a/node_modules/pm2/lib/API/.Startup.js.swp b/node_modules/pm2/lib/API/.Startup.js.swp
new file mode 100644
index 0000000..00c3070
Binary files /dev/null and b/node_modules/pm2/lib/API/.Startup.js.swp differ
diff --git a/node_modules/pm2/lib/API/Startup.js b/node_modules/pm2/lib/API/Startup.js
index 592904e..43ef73c 100644
--- a/node_modules/pm2/lib/API/Startup.js
+++ b/node_modules/pm2/lib/API/Startup.js
@@ -14,6 +14,10 @@ var util 	       = require('util');
 var tmpPath      = require('os').tmpdir;
 var which        = require('../tools/which.js');
 var sexec = require('../tools/sexec')
+var path_module = require('path');
+
+const module_filename = path_module.normalize(__filename + '/../../../bin/pm2');
+
 module.exports = function(CLI) {
   /**
    * If command is launched without root right
@@ -26,7 +30,7 @@ module.exports = function(CLI) {
       return cb(new Error('You have to run this with elevated rights'));
     }
     return sexec('whoami', {silent: true}, function(err, stdout, stderr) {
-      console.log('sudo env PATH=$PATH:' + path.dirname(process.execPath) + ' ' + require.main.filename + ' ' + opts.args[1].name() + ' ' + platform + ' -u ' + stdout.trim() + ' --hp ' + process.env.HOME);
+      console.log('sudo env PATH=$PATH:' + path.dirname(process.execPath) + ' ' + module_filename + ' ' + opts.args[1].name() + ' ' + platform + ' -u ' + stdout.trim() + ' --hp ' + process.env.HOME);
       return cb(new Error('You have to run this with elevated rights'));
     });
   }
@@ -335,7 +339,7 @@ module.exports = function(CLI) {
     else
       envPath = util.format('%s:%s', process.env.PATH || '', path.dirname(process.execPath))
 
-    template = template.replace(/%PM2_PATH%/g, process.mainModule.filename)
+    template = template.replace(/%PM2_PATH%/g, module_filename)
       .replace(/%NODE_PATH%/g, envPath)
       .replace(/%USER%/g, user)
       .replace(/%HOME_PATH%/g, opts.hp ? path.resolve(opts.hp, '.pm2') : cst.PM2_ROOT_PATH)
@@ -387,7 +391,8 @@ module.exports = function(CLI) {
 
       return cb(null, {
         destination  : destination,
-        template : template
+        template : template,
+        platform : platform
       });
     });
   };
diff --git a/node_modules/pm2/types/index.d.ts b/node_modules/pm2/types/index.d.ts
index b2e8a6d..2b9c700 100644
--- a/node_modules/pm2/types/index.d.ts
+++ b/node_modules/pm2/types/index.d.ts
@@ -181,7 +181,15 @@ export function sendSignalToProcessName(signal:string|number, process: number|st
  * @param platform
  * @param errback
  */
-export function startup(platform: Platform, errback: ErrResultCallback): void;
+export function startup(platform: Platform | undefined, options: StartOptions, errback: ErrResultCallback): void;
+
+
+/**
+ *  UNDOCUMENTED
+ *  Uninstalls startup script for pm2.
+ */
+export function uninstallStartup(platform: Platform | undefined, options: StartOptions, errback: ErrResultCallback): void;
+
 
 /**
  * - Send an set of data as object to a specific process
